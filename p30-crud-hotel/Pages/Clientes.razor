@* Pages/Clientes.razor *@
@page "/clientes"
@inject ClienteServicio clienteServicio
@inject IJSRuntime jsRuntime

<h3>Clientes</h3>

<NavLink class="nav-link" href="cliente/agregar">
<span class="oi oi-plus" aria-hidden="true">Agregar cliente</span>
</NavLink>

<label>Buscar cliente:</label>
<input type="text" @oninput="@( (e) => Filtro(e) )">

<div class="row">
    <div class="col-md-6">
    <table class="table table-hover">
        <thead>
            <tr>
            <th>Nombre</th>
            <th>Apellido</th>
            <th>Genero</th>
            <th>FechaCumple</th>
            <th>Correo</th>
            <th>Telefono</th>
            <th>Nombre Completo</th>
            <th>Edad</th>
            <th>Acci√≥n</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cliente in clientes) {
            <tr>
            <td>@cliente.Nombre</td>
            <td>@cliente.Apellido</td>
            <td>@cliente.Genero</td>
            <td>@cliente.FechaCumple</td>
            <td>@cliente.Correo</td>
            <td>@cliente.Telefono</td>
            <td>@cliente.NombreCompleto</td>
            <td>@cliente.Edad</td>
            @if(cliente.Reservaciones.Count==0) {
                <td>-sin reservaciones-</td>
                } else {
                    <td>
                    @foreach(var reser in cliente.Reservaciones) {
                        @String.Format($"{@reser.Habitacion.HabitacionId} - { @reser.Habitacion.Tipo}")<br />
                    }
                    </td>
                }
                <td>
            <a href="cliente/editar/@cliente.Id" class="btn btn-success">Editar</a>
            <a class="btn btn-danger" @onclick="async ()=> await
            Borrar(cliente)">Borrar</a>
            </td>
            </tr>
            }
        </tbody>
    </table>
    </div>
</div>

@code {
    private List<Cliente> clientes = new();
    protected override void OnInitialized() {
    clientes = clienteServicio.ObtenerTodo("");
    }
    
    private async Task Borrar(Cliente cliente) {
        bool confirmed = await jsRuntime.InvokeAsync<bool>("confirm", "Estas seguro????");
            if (confirmed)
              if(clienteServicio.Borrar(cliente.Id))
              clientes.Remove(cliente);
    }
    
    protected void Filtro(ChangeEventArgs e) {
        string cadenabuscar = e.Value.ToString();
        clientes = clienteServicio.ObtenerTodo(cadenabuscar);
    }
}